trigger: 
  branches:
    include:
      - main

pool:
  name: IISAgentPool
  demands:
    - agent.os -equals Windows_NT

variables:
  phpVersion: '8.2'

steps:
  - checkout: self

  - script: |
      php -v
    displayName: 'Verify PHP Installation'

  - script: |
      echo "Installing Composer..."
      php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      php composer-setup.php
      php -r "unlink('composer-setup.php');"
      php composer.phar --version
    displayName: 'Install Composer'

  - script: |
      echo "Installing Composer dependencies..."
      php composer.phar install --no-interaction --prefer-dist
    displayName: 'Install Composer dependencies'

  - script: |
      echo "Creating zip of app..."
      powershell Compress-Archive -Path * -Exclude *.git*,*.zip -DestinationPath $(Build.ArtifactStagingDirectory)\myapp.zip
      echo "Copying deploy script..."
      copy deploy.bat $(Build.ArtifactStagingDirectory)\deploy.bat
    displayName: 'Package app and deploy script'

  - script: |
      echo "Checking contents of Artifact Staging Directory..."
      dir "$(Build.ArtifactStagingDirectory)"
    displayName: 'Check contents of Artifact Staging Directory'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    displayName: 'Publish build artifacts'

  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'drop'
      targetPath: '$(Pipeline.Workspace)/drop'
    displayName: 'Download Build Artifact'

  - script: |
      echo "Checking downloaded artifacts..."
      dir "$(Pipeline.Workspace)\drop"
    displayName: 'Check downloaded artifacts'

  # ‚úÖ Updated CMD step for deployment
  - task: CmdLine@2
    displayName: 'Copy build artifacts to IIS and restart IIS'
    inputs:
      script: |
        echo üìÅ Copying files to IIS web root...
        set source=%Pipeline.Workspace%\drop
        set destination=C:\inetpub\wwwroot\MyWebApp

        echo üîç Source: %source%
        echo üîç Destination: %destination%

        if not exist "%source%" (
            echo ‚ùå Source path does not exist: %source%
            exit /b 1
        )

        if exist "%destination%" (
            echo üßπ Cleaning existing files...
            del /q /f "%destination%\*"
        ) else (
            echo üìÇ Creating destination folder...
            mkdir "%destination%"
        )

        echo üì¶ Copying files...
        xcopy /E /I /H /Y "%source%\*" "%destination%"
        echo ‚úÖ Files copied successfully.

        echo üîÑ Restarting IIS...
        net stop W3SVC
        net start W3SVC
        echo ‚úÖ IIS restarted successfully.

  - script: |
      echo "Running deploy.bat..."
      call $(Pipeline.Workspace)\drop\deploy.bat
    displayName: 'Run deployment script'
