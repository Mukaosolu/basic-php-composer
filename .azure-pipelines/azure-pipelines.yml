trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  phpVersion: '8.2'

steps:
  - checkout: self

  # Install PHP 8.2 and required extensions
  - script: |
      sudo add-apt-repository ppa:ondrej/php -y
      sudo apt-get update
      sudo apt-get install -y php8.2 php8.2-cli php8.2-mbstring php8.2-xml php8.2-zip php8.2-bcmath php8.2-intl php8.2-curl
      sudo update-alternatives --install /usr/bin/php php /usr/bin/php8.2 1
      sudo update-alternatives --set php /usr/bin/php8.2
      php -v
    displayName: 'Install PHP 8.2 and extensions'

  # Install Composer
  - script: |
      curl -sS https://getcomposer.org/installer | php
      sudo mv composer.phar /usr/local/bin/composer
      composer --version
    displayName: 'Install Composer'

  # Install Composer dependencies
  - script: |
      composer install --no-interaction --prefer-dist
    displayName: 'Install Composer dependencies'

  # Run PHPUnit tests
  - script: |
      ./vendor/bin/phpunit --configuration phpunit.xml
    displayName: 'Run PHPUnit tests'

  # Copy files to artifact staging directory
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Copy files to artifact staging'

  # Publish build artifacts
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    displayName: 'Publish build artifacts'

  # CD Step: Download build artifacts
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'drop'  # Name of the artifact we published earlier
      targetPath: '$(Pipeline.Workspace)/drop'  # Path to where the artifact will be downloaded
    displayName: 'Download Build Artifact'

  # CD Step: Deploy to Linux VM using SSH
  - task: SSH@0
    inputs:
      sshEndpoint: 'Linux-vm-ssh'  # The SSH service connection name
      runOptions: 'commands'
      commands: |
        sudo rm -rf /var/www/html/*
        sudo cp -r $(Pipeline.Workspace)/drop/* /var/www/html/
        sudo systemctl restart apache2
    displayName: 'Deploy to Linux VM and restart Apache'
