trigger: 
  branches:
    include:
      - main

pool:
  name: IISAgentPool
  demands:
    - agent.os -equals Windows_NT

variables:
  phpVersion: '8.2'

steps:
  - checkout: self

  - script: |
      php -v
    displayName: 'Verify PHP Installation'

  - script: |
      echo "Installing Composer..."
      php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      php composer-setup.php
      php -r "unlink('composer-setup.php');"
      php composer.phar --version
    displayName: 'Install Composer'

  - script: |
      echo "Installing Composer dependencies..."
      php composer.phar install --no-interaction --prefer-dist
    displayName: 'Install Composer dependencies'

  - script: |
      echo "Creating zip of app..."
      powershell Compress-Archive -Path * -Exclude *.git*,*.zip -DestinationPath $(Build.ArtifactStagingDirectory)\myapp.zip
      echo "Copying deploy script..."
      copy deploy.bat $(Build.ArtifactStagingDirectory)\deploy.bat
    displayName: 'Package app and deploy script'

  - script: |
      echo "Checking contents of Artifact Staging Directory..."
      dir "$(Build.ArtifactStagingDirectory)"
    displayName: 'Check contents of Artifact Staging Directory'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    displayName: 'Publish build artifacts'

  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'drop'
      targetPath: '$(Pipeline.Workspace)/drop'
    displayName: 'Download Build Artifact'

  - script: |
      echo "Checking downloaded artifacts..."
      dir "$(Pipeline.Workspace)\drop"
    displayName: 'Check downloaded artifacts'

  # ‚úÖ Updated task: copy and restart IIS
  - task: PowerShell@2
    displayName: 'Copy build artifacts to IIS and restart IIS'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "üìÅ Copying files to IIS web root..."
        $source = "$(Pipeline.Workspace)\drop"
        $destination = "C:\inetpub\wwwroot\MyWebApp"

        if (Test-Path $destination) {
            Write-Host "Cleaning existing files..."
            Remove-Item -Recurse -Force "$destination\*"
        } else {
            Write-Host "Creating destination folder..."
            New-Item -ItemType Directory -Force -Path $destination
        }

        Copy-Item -Path "$source\*" -Destination $destination -Recurse -Force
        Write-Host "‚úÖ Files copied successfully."

        Write-Host "üîÑ Restarting IIS..."
        Restart-Service -Name 'W3SVC' -Force
        Write-Host "‚úÖ IIS restarted successfully."

  - script: |
      echo "Running deploy.bat..."
      call $(Pipeline.Workspace)\drop\deploy.bat
    displayName: 'Run deployment script'
